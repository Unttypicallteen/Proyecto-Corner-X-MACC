import * as THREE from "https://cdn.skypack.dev/three@0.129.0/build/three.module.js";
import {OrbitControls} from "https://cdn.skypack.dev/three@0.129.0/examples/jsm/controls/OrbitControls";
import {GLTFLoader } from "https://cdn.skypack.dev/three@0.129.0/examples/jsm/loaders/GLTFLoader.js";

const scene = new THREE.Scene();

const camera = new THREE.PerspectiveCamera(100,window.innerWidth / window.innerHeight , 0.1 , 1000);

camera.position.set(0, 2, 150);  

let object;

let controls

let truckToRender = "truck";
let bikeToRender = "bike";
let carToRender = "car";

const loader = new GLTFLoader();

if (truckToRender && bikeToRender && carToRender){
    loader.load(
        `Vehicles/${truckToRender}.gltf`,
        function(gltf){
            object = gltf.scene;
            object.position.set(1,0,-2);
            scene.add(object);
        },
        function(xhr){
            console.log((xhr.loaded / xhr.total * 100) + '% loaded');
        },
        function(error){
    
            console.error(error);
        }
    );
    loader.load(
        `Vehicles/${carToRender}.gltf`,
        function(gltf){
            object = gltf.scene;
            object.position.set(3,0,-2);
            scene.add(object);
        },
        function(xhr){
            console.log((xhr.loaded / xhr.total * 100) + '% loaded');
        },
        function(error){
    
            console.error(error);
        }
    );
    loader.load(
        `Vehicles/${bikeToRender}.gltf`,
        function(gltf){
            object = gltf.scene;
            object.position.set(5,0,-2);
            scene.add(object);
        },
        function(xhr){
            console.log((xhr.loaded / xhr.total * 100) + '% loaded');
        },
        function(error){
    
            console.error(error);
        }
    );
}



const renderer = new THREE.WebGLRenderer({alpha :true});
renderer.setSize(window.innerWidth , window.innerHeight);
    
document.getElementById("container3D").appendChild(renderer.domElement);

const ambientLightBike = new THREE.AmbientLight(0x888888 , bikeToRender == "bike" ? 5 : 1);
scene.add(ambientLightBike);
const ambientLightTruck = new THREE.AmbientLight(0x888888 , truckToRender == "truck" ? 5 : 1);
scene.add(ambientLightTruck);
const ambientLightCar = new THREE.AmbientLight(0x888888 , carToRender == "car" ? 5 : 1);
scene.add(ambientLightCar);


if (bikeToRender === "bike") {
    controls = new OrbitControls(camera, renderer.domElement);
}else if(truckToRender == "truck"){
    controls = new OrbitControls(camera, renderer.domElement);
}else if(carToRender == "car"){
    controls = new OrbitControls(camera, renderer.domElement);
}

// Render the scene
function animate() {
    requestAnimationFrame(animate); 
    if (controls) controls.update();  
    renderer.render(scene, camera);   
}

window.addEventListener("resize" , function(){
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth , window.innerHeight)
});

animate();
